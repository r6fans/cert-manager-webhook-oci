image: golang:1.17-alpine

stages:
  - test
  - build
  - deploy

go test:
  stage: test
  script:
    - apk add --no-cache g++ make gettext curl
    - echo '{"ociProfileSecretName":"oci-profile"}' > testdata/oci/config.json
    - cp -f $TEST_OCI_PROFILE_RESOURCE testdata/oci/oci-profile.yaml
    - rm testdata/oci/*.sample
    - make test
  coverage: '/coverage:\s(\d+(?:\.\d+)?%)/'

go lint:
  stage: test
  script:
    - go install golang.org/x/lint/golint@latest
    - golint -set_exit_status

helm lint:
  stage: test
  image:
    name: alpine/helm:3.10.2
    entrypoint: [""]
  script:
    - helm lint deploy/cert-manager-webhook-oci

docker:latest:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - mkdir -p /kaniko/.docker
    - 'echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json'
  script:
    - /kaniko/executor --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --destination $CI_REGISTRY_IMAGE:latest
  only:
    - master

docker:tag:
  stage: deploy
  image:
    name: quay.io/skopeo/stable:latest
    entrypoint: [""]
  before_script:
    - skopeo login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - skopeo copy docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - tags

helm repo:
  stage: build
  image:
    name: alpine/helm:3.10.2
    entrypoint: [""]
  script:
    ## below code is required to keep helm packages of previous builds, but it cannot work as long as https://gitlab.com/gitlab-org/gitlab/issues/5813 is not resolved
    # - apk add --no-cache jq
    # - 'PREVIOUS_TAG_PIPELINE=$(wget -q -O - --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/pipelines?scope=tags&status=success&order_by=updated_at&sort=desc" | jq ".[0].id")'
    # - '[ $PREVIOUS_TAG_PIPELINE != "null" ] && PREVIOUS_TAG_PAGES_JOB=$(wget -q -O - --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/pipelines/$PREVIOUS_TAG_PIPELINE/jobs?scope=success" | jq ".[] | select(.name="pages") | .id")'
    # - '[ $PREVIOUS_TAG_PAGES_JOB != "null" ] && wget --output-document previous-pages.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/$PREVIOUS_TAG_PAGES_JOB/artifacts"'
    - 'wget --output-document previous-pages.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/master/download?job=pages" || echo "no previous pages"'
    - "[ -f previous-pages.zip ] && unzip -n previous-pages.zip"
    - mkdir -p public
    - "echo \"User-Agent: *\nDisallow: /\" > public/robots.txt"
    - helm package deploy/cert-manager-webhook-oci --destination public
    - helm repo index --url https://${CI_PROJECT_NAMESPACE}.gitlab.io/${CI_PROJECT_NAME} public
    - cp -f deploy/index.html.pre public/index.html
    - ls -vr public/ | grep .tgz | xargs -n 1 -I {} echo "      <li><a href=\"./{}\">{}</a></li>" >> public/index.html
    - cat deploy/index.html.post >> public/index.html
  only:
    - master
    - tags
  artifacts:
    paths:
      - public

pages:
  stage: deploy
  artifacts:
    paths:
      - public
  script:
    - mkdir -p public
  only:
    - tags
  needs:
    - helm repo
